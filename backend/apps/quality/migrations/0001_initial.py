# Generated by Django 5.1.7 on 2025-04-02 15:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0001_initial"),
        ("curriculum", "0001_initial"),
        ("staff", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Feedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "is_anonymous",
                    models.BooleanField(
                        default=False, verbose_name="Anonymous Feedback"
                    ),
                ),
                (
                    "feedback_type",
                    models.CharField(
                        choices=[
                            ("suggestion", "Suggestion"),
                            ("complaint", "Complaint"),
                            ("compliment", "Compliment"),
                            ("question", "Question"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                        verbose_name="Feedback Type",
                    ),
                ),
                ("subject", models.CharField(max_length=255, verbose_name="Subject")),
                ("content", models.TextField(verbose_name="Content")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("under_review", "Under Review"),
                            ("in_progress", "In Progress"),
                            ("resolved", "Resolved"),
                            ("closed", "Closed"),
                        ],
                        default="new",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                ("resolution", models.TextField(blank=True, verbose_name="Resolution")),
                (
                    "resolved_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Resolved Date"
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Contact Email"
                    ),
                ),
                (
                    "allow_contact",
                    models.BooleanField(default=True, verbose_name="Allow Contact"),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_feedback",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="feedback",
                        to="curriculum.course",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="feedback",
                        to="core.department",
                    ),
                ),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback",
                        to="core.school",
                    ),
                ),
                (
                    "staff_member",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="feedback",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "submitter",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="submitted_feedback",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Feedback",
                "verbose_name_plural": "Feedback",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ImprovementPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                (
                    "improvement_area",
                    models.CharField(
                        choices=[
                            ("curriculum", "Curriculum"),
                            ("teaching", "Teaching Methods"),
                            ("facilities", "Facilities"),
                            ("student_services", "Student Services"),
                            ("technology", "Technology"),
                            ("policies", "Policies & Procedures"),
                            ("staff_development", "Staff Development"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                        verbose_name="Improvement Area",
                    ),
                ),
                ("description", models.TextField(verbose_name="Description")),
                ("objectives", models.TextField(verbose_name="Objectives")),
                ("start_date", models.DateField(verbose_name="Start Date")),
                (
                    "target_completion_date",
                    models.DateField(verbose_name="Target Completion Date"),
                ),
                (
                    "actual_completion_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Actual Completion Date"
                    ),
                ),
                (
                    "resources_required",
                    models.TextField(blank=True, verbose_name="Resources Required"),
                ),
                (
                    "estimated_cost",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Estimated Cost",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("approved", "Approved"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("evaluated", "Evaluated"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "approved_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Approval Date"
                    ),
                ),
                (
                    "success_criteria",
                    models.TextField(blank=True, verbose_name="Success Criteria"),
                ),
                (
                    "evaluation_method",
                    models.TextField(blank=True, verbose_name="Evaluation Method"),
                ),
                (
                    "evaluation_results",
                    models.TextField(blank=True, verbose_name="Evaluation Results"),
                ),
                (
                    "evaluation_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Evaluation Date"
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_plans",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="improvement_plans",
                        to="core.department",
                    ),
                ),
                (
                    "responsible_person",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="responsible_for_plans",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="improvement_plans",
                        to="core.school",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Improvement Plan",
                "verbose_name_plural": "Improvement Plans",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="QualityMetric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Metric Name")),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("student_satisfaction", "Student Satisfaction"),
                            ("learning_outcomes", "Learning Outcomes"),
                            ("attendance_rate", "Attendance Rate"),
                            ("retention_rate", "Retention Rate"),
                            ("graduation_rate", "Graduation Rate"),
                            ("teacher_performance", "Teacher Performance"),
                            ("course_effectiveness", "Course Effectiveness"),
                            ("facility_quality", "Facility Quality"),
                            ("other", "Other"),
                        ],
                        max_length=25,
                        verbose_name="Metric Type",
                    ),
                ),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "calculation_method",
                    models.TextField(blank=True, verbose_name="Calculation Method"),
                ),
                (
                    "target_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Target Value",
                    ),
                ),
                (
                    "minimum_acceptable",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Minimum Acceptable Value",
                    ),
                ),
                (
                    "frequency",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Measurement Frequency"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="quality_metrics",
                        to="core.department",
                    ),
                ),
                (
                    "responsible_person",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="responsible_for_metrics",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quality_metrics",
                        to="core.school",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Quality Metric",
                "verbose_name_plural": "Quality Metrics",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="MetricMeasurement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                ("date", models.DateField(verbose_name="Measurement Date")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Measured Value"
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "course",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="metric_measurements",
                        to="curriculum.course",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "instructor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="metric_measurements",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "measured_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="measurements",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated By",
                    ),
                ),
                (
                    "metric",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="measurements",
                        to="quality.qualitymetric",
                    ),
                ),
            ],
            options={
                "verbose_name": "Metric Measurement",
                "verbose_name_plural": "Metric Measurements",
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                ("text", models.TextField(verbose_name="Question Text")),
                (
                    "question_type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("textarea", "Text Area"),
                            ("single_choice", "Single Choice"),
                            ("multiple_choice", "Multiple Choice"),
                            ("rating", "Rating"),
                            ("likert", "Likert Scale"),
                            ("yes_no", "Yes/No"),
                        ],
                        max_length=20,
                        verbose_name="Question Type",
                    ),
                ),
                (
                    "is_required",
                    models.BooleanField(default=True, verbose_name="Required"),
                ),
                ("order", models.PositiveIntegerField(verbose_name="Order")),
                (
                    "min_value",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Minimum Value"
                    ),
                ),
                (
                    "max_value",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Maximum Value"
                    ),
                ),
                ("help_text", models.TextField(blank=True, verbose_name="Help Text")),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Question",
                "verbose_name_plural": "Questions",
                "ordering": ["survey", "order"],
            },
        ),
        migrations.CreateModel(
            name="QuestionOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                ("text", models.CharField(max_length=255, verbose_name="Option Text")),
                ("order", models.PositiveIntegerField(verbose_name="Order")),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="options",
                        to="quality.question",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Question Option",
                "verbose_name_plural": "Question Options",
                "ordering": ["question", "order"],
                "unique_together": {("question", "order")},
            },
        ),
        migrations.CreateModel(
            name="Survey",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "survey_type",
                    models.CharField(
                        choices=[
                            ("course", "Course Evaluation"),
                            ("instructor", "Instructor Evaluation"),
                            ("facility", "Facility Evaluation"),
                            ("general", "General Feedback"),
                            ("satisfaction", "Satisfaction Survey"),
                            ("exit", "Exit Survey"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                        verbose_name="Survey Type",
                    ),
                ),
                (
                    "is_anonymous",
                    models.BooleanField(default=True, verbose_name="Anonymous Survey"),
                ),
                (
                    "allow_multiple_submissions",
                    models.BooleanField(
                        default=False, verbose_name="Allow Multiple Submissions"
                    ),
                ),
                ("start_date", models.DateField(verbose_name="Start Date")),
                ("end_date", models.DateField(verbose_name="End Date")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("active", "Active"),
                            ("closed", "Closed"),
                            ("archived", "Archived"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "instructions",
                    models.TextField(blank=True, verbose_name="Instructions"),
                ),
                (
                    "course",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="surveys",
                        to="curriculum.course",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="surveys",
                        to="core.department",
                    ),
                ),
                (
                    "instructor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="surveys",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="surveys",
                        to="core.school",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Survey",
                "verbose_name_plural": "Surveys",
                "ordering": ["-start_date", "title"],
            },
        ),
        migrations.AddField(
            model_name="question",
            name="survey",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="questions",
                to="quality.survey",
            ),
        ),
        migrations.CreateModel(
            name="SurveyResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "submission_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Submission Date"
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP Address"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="User Agent")),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "respondent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="survey_responses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "survey",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="responses",
                        to="quality.survey",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Survey Response",
                "verbose_name_plural": "Survey Responses",
                "ordering": ["-submission_date"],
            },
        ),
        migrations.AlterUniqueTogether(
            name="question",
            unique_together={("survey", "order")},
        ),
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "text_answer",
                    models.TextField(blank=True, verbose_name="Text Answer"),
                ),
                (
                    "numeric_answer",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Numeric Answer"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated By",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="answers",
                        to="quality.question",
                    ),
                ),
                (
                    "selected_options",
                    models.ManyToManyField(
                        blank=True, related_name="answers", to="quality.questionoption"
                    ),
                ),
                (
                    "survey_response",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="answers",
                        to="quality.surveyresponse",
                    ),
                ),
            ],
            options={
                "verbose_name": "Answer",
                "verbose_name_plural": "Answers",
                "unique_together": {("survey_response", "question")},
            },
        ),
    ]
