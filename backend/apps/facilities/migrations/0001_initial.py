# Generated by Django 5.1.7 on 2025-04-02 15:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Building",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Building Name"),
                ),
                ("code", models.CharField(max_length=20, verbose_name="Building Code")),
                ("address", models.TextField(blank=True, verbose_name="Address")),
                (
                    "floors",
                    models.PositiveSmallIntegerField(
                        default=1, verbose_name="Number of Floors"
                    ),
                ),
                (
                    "year_built",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Year Built"
                    ),
                ),
                (
                    "total_area",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Total Area (sqm)",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="buildings",
                        to="core.school",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Building",
                "verbose_name_plural": "Buildings",
                "ordering": ["name"],
                "unique_together": {("school", "code")},
            },
        ),
        migrations.CreateModel(
            name="Equipment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="Equipment Name"),
                ),
                (
                    "equipment_type",
                    models.CharField(
                        choices=[
                            ("furniture", "Furniture"),
                            ("electronics", "Electronics"),
                            ("teaching", "Teaching Aid"),
                            ("sports", "Sports Equipment"),
                            ("lab", "Laboratory Equipment"),
                            ("safety", "Safety Equipment"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                        verbose_name="Equipment Type",
                    ),
                ),
                (
                    "serial_number",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Serial Number"
                    ),
                ),
                (
                    "acquisition_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Acquisition Date"
                    ),
                ),
                (
                    "cost",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Cost",
                    ),
                ),
                (
                    "warranty_expiry",
                    models.DateField(
                        blank=True, null=True, verbose_name="Warranty Expiry"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("operational", "Operational"),
                            ("maintenance", "Under Maintenance"),
                            ("broken", "Broken"),
                            ("disposed", "Disposed"),
                        ],
                        default="operational",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Equipment",
                "verbose_name_plural": "Equipment",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Inventory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Item Name")),
                (
                    "item_type",
                    models.CharField(
                        choices=[
                            ("stationery", "Stationery"),
                            ("equipment", "Equipment"),
                            ("furniture", "Furniture"),
                            ("books", "Books"),
                            ("electronics", "Electronics"),
                            ("cleaning", "Cleaning Supplies"),
                            ("sports", "Sports Equipment"),
                            ("medical", "Medical Supplies"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                        verbose_name="Item Type",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(default=0, verbose_name="Quantity"),
                ),
                ("unit", models.CharField(max_length=50, verbose_name="Unit")),
                (
                    "unit_cost",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Unit Cost"
                    ),
                ),
                (
                    "reorder_level",
                    models.PositiveIntegerField(
                        default=10, verbose_name="Reorder Level"
                    ),
                ),
                (
                    "storage_location",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Storage Location",
                    ),
                ),
                (
                    "last_restock_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Last Restock Date"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inventory_items",
                        to="core.school",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Inventory Item",
                "verbose_name_plural": "Inventory Items",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Room",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Room Name")),
                ("number", models.CharField(max_length=20, verbose_name="Room Number")),
                (
                    "floor",
                    models.PositiveSmallIntegerField(
                        default=1, verbose_name="Floor Number"
                    ),
                ),
                (
                    "room_type",
                    models.CharField(
                        choices=[
                            ("classroom", "Classroom"),
                            ("office", "Office"),
                            ("lab", "Laboratory"),
                            ("library", "Library"),
                            ("hall", "Hall"),
                            ("cafeteria", "Cafeteria"),
                            ("gym", "Gymnasium"),
                            ("bathroom", "Bathroom"),
                            ("storage", "Storage"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                        verbose_name="Room Type",
                    ),
                ),
                (
                    "capacity",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Capacity"
                    ),
                ),
                (
                    "area",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="Area (sqm)",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "building",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rooms",
                        to="facilities.building",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Room",
                "verbose_name_plural": "Rooms",
                "ordering": ["building", "floor", "number"],
                "unique_together": {("building", "number")},
            },
        ),
        migrations.CreateModel(
            name="Maintenance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "maintenance_type",
                    models.CharField(
                        choices=[
                            ("repair", "Repair"),
                            ("replacement", "Replacement"),
                            ("preventive", "Preventive Maintenance"),
                            ("inspection", "Inspection"),
                            ("cleaning", "Cleaning"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                        verbose_name="Maintenance Type",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=10,
                        verbose_name="Priority",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("assigned", "Assigned"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "reported_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Reported Date"
                    ),
                ),
                (
                    "scheduled_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Scheduled Date"
                    ),
                ),
                (
                    "completion_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Completion Date"
                    ),
                ),
                (
                    "cost",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Cost",
                    ),
                ),
                ("parts_used", models.TextField(blank=True, verbose_name="Parts Used")),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_maintenance",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "building",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="maintenance_requests",
                        to="facilities.building",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "equipment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="maintenance_records",
                        to="facilities.equipment",
                    ),
                ),
                (
                    "requester",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="maintenance_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated By",
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="maintenance_requests",
                        to="facilities.room",
                    ),
                ),
            ],
            options={
                "verbose_name": "Maintenance",
                "verbose_name_plural": "Maintenance",
                "ordering": ["-reported_date"],
            },
        ),
        migrations.AddField(
            model_name="equipment",
            name="room",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="equipment",
                to="facilities.room",
            ),
        ),
        migrations.CreateModel(
            name="Reservation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "purpose",
                    models.CharField(
                        choices=[
                            ("class", "Regular Class"),
                            ("event", "Event"),
                            ("meeting", "Meeting"),
                            ("exam", "Examination"),
                            ("other", "Other"),
                        ],
                        default="meeting",
                        max_length=20,
                    ),
                ),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Approval"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("rejection_reason", models.TextField(blank=True, null=True)),
                ("approved_date", models.DateTimeField(blank=True, null=True)),
                ("attendees_count", models.PositiveIntegerField(default=1)),
                ("notes", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_reservations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_reservations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reserver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="room_reservations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_reservations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reservations",
                        to="facilities.room",
                    ),
                ),
            ],
            options={
                "ordering": ["-start_time"],
                "indexes": [
                    models.Index(
                        fields=["room", "start_time", "end_time"],
                        name="facilities__room_id_1470c9_idx",
                    ),
                    models.Index(
                        fields=["status"], name="facilities__status_88c289_idx"
                    ),
                ],
            },
        ),
    ]
